{{ $xrayCfgDir := "/etc/xray" }}
{{ $xrayCfgFile := "config.json" }}

{{ $haproxyCfgDir := "/etc/haproxy" }}
{{ $haproxyCfgFile := "xray.cfg" }}

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-no-bs-xray
spec:
  selector:
    matchLabels:
      name: {{ .Release.Name }}-no-bs-xray
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-no-bs-xray
      annotations:
        always-reroll: {{ randAlphaNum 5 | quote }}
    spec:
      terminationGracePeriodSeconds: 5
      tolerations: # see: <https://kubernetes.io/docs/concepts/workloads/controllers/daemonset>
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      containers:
        - name: no-bs-xray
          image: ghcr.io/xtls/xray-core:{{ .Values.XrayVersion | default "25.9.11" }}
          args: [-c, {{ print $xrayCfgDir "/" $xrayCfgFile | quote }}]
          volumeMounts:
            - name: xray-config
              mountPath: {{ $xrayCfgDir | quote }}
              readOnly: true
        - name: no-bs-haproxy
          image: haproxy:{{ .Values.haproxyVersion | default "3.2" }}
          args: [-f, {{ print $haproxyCfgDir "/" $haproxyCfgFile | quote }}]
          ports:
            - containerPort: {{ .Values.port }}
              hostPort: {{ .Values.port }}
              protocol: TCP
            - containerPort: {{ .Values.port }}
              hostPort: {{ .Values.port }}
              protocol: UDP
          volumeMounts:
            - name: haproxy-config
              mountPath: {{ $haproxyCfgDir | quote }}
              readOnly: true
      volumes:
        - name: xray-config
          configMap:
            name: {{ .Release.Name }}-no-bs-config
            items:
              - key: xray.json
                path: {{ $xrayCfgFile | quote }}
        - name: haproxy-config
          configMap:
            name: {{ .Release.Name }}-no-bs-config
            items:
              - key: haproxy.cfg
                path: {{ $haproxyCfgFile | quote }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - { key: no-bs, operator: NotIn, values: [cap] }
